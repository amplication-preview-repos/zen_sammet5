/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccessControlListRelationFilter } from "../../accessControl/base/AccessControlListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { BlockchainRecordListRelationFilter } from "../../blockchainRecord/base/BlockchainRecordListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { UploadListRelationFilter } from "../../upload/base/UploadListRelationFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class DocumentWhereInput {
  @ApiProperty({
    required: false,
    type: () => AccessControlListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AccessControlListRelationFilter)
  @IsOptional()
  @Field(() => AccessControlListRelationFilter, {
    nullable: true,
  })
  accessControls?: AccessControlListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => BlockchainRecordListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BlockchainRecordListRelationFilter)
  @IsOptional()
  @Field(() => BlockchainRecordListRelationFilter, {
    nullable: true,
  })
  blockchainRecords?: BlockchainRecordListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  content?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  hash?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  title?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UploadListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UploadListRelationFilter)
  @IsOptional()
  @Field(() => UploadListRelationFilter, {
    nullable: true,
  })
  uploads?: UploadListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}

export { DocumentWhereInput as DocumentWhereInput };
